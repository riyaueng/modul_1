/* Bitte immer am Anfang alles bzw. alle Elemente auf 0 setzen in Bezug auf margin und padding */

* {box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    /* Unser root Verzeichnis */
    font-size: 16px;
    /* font-size: 62,5%;  */ /* ergibt 10px */
    font-family: Arial, Helvetica, sans-serif;
}

/* :root ist wie ein Lagerhaus und man kann einfach bestimmte Eigenschaften auslagern, um sie mal wieder zu nutzen */
:root {
    --header-h2-color: #ff115;
    --width: 400px;
    --bg-color-yellow: rgb(253 152 0);
    --p-color: rgb(240, 120, 140);
}

/* Schriften einbinden */
/* Keyword: @font-face */

@font-face {
    font-family: "Caveat-Variable";
    src: url("./../fonts/Caveat/Caveat-VariableFont_wght.ttf");
}

@font-face {
    font-family: "Tiny-pizza";
    src: url("./../fonts/Tiny5/Tiny5-Regular.ttf");
}

/* Mit Elementen */

header {
    /* Das ist Korrekt aber es gibt dafür noch ein Shortcut */
    /* margin-top: 50px; 
    margin-bottom: 50px; */
    margin: 50px auto;
}

/* Schrift Anwendung */

header h1 {
    font-family: "Caveat-Variable", "sans-serif";
    font-size: 70px;
    text-decoration: underline;
    /* text-align wird verwendet um die horizontale Ausrichtung von Tetxen in einem Element zu steuern */
    text-align: center;
    color: tomato;
    margin-bottom: 50px;
}

header p {
    border: 2px solid yellow;
    font-family: "Tiny-pizza";
    /* Wie verwende ich die ausgelagerte Farbe oder bzw. die Variable von :root, indem man die Methode var() benutzt wird */
    color: var(--p-color);
    font-weight: 900;
    text-align: right;
    /* letter-spacing: 10px; */
    word-spacing: 10px;
    /* default ist nach jedem Wort, bricht nach jeden Buchstaben um */
    word-break: break-all;
}

main {
    background-color: hotpink;
}

main article {
    padding: 40px 60px;
    margin: 20px auto;
    border: 3px solid green;
    width: 700px;
    background-color: yellow;
}

main article h2 {
    color: blue;
    border: 1px dashed blue;
    text-align: center;
    display: inline;
}

.box {
    width: var(--width);
    height: 100px;
    background-color: var(--bg-color-yellow);
}

/* ! ****** Ab jetzt arbeiten wir mit den relativen Einheiten */

/* ! "%" Porzent bezieht sich immer auf den Elterncontainer*/

.relative_container_percent {
    border: 2px solid green;
    width: 500px;
}

.container {
    width: 70%;
}

img {
    width: 100%;
    display: block;
}

/* $ "VH und VW" Viewport Einheit */

/* VH und VW sind zwei Frechdachse und hängen nicht von Elternelement, sondern von dem Bereich des Browserfenster also Viewpoint ab */

.box1 {
    border: 2px solid white;
    text-align: center;
    padding: 50px;
    color: white;
    /* width: 100vw; */
    height: 20vh;
}

.box2 {
    text-align: center;
    padding: 100px;
    color: white;
    width: 50vw;
    height: 50vh;
    background-color: limegreen;
}

/* $ EM und REM Einheiten */

/* ? EM bezieht sich immer auf die Schriftgröße des direkt übergeordnete Element */

.em__font-size {
    /* Elternelement */
    font-size: 16px;
}

.larger {
    font-size: 1.5em; /* ? 1.5em wird im Hintergrund ungefähr als 24px berechnet */
}


/* ? REM bezieht sich immer auf den Root oder besser gesagt html */

.even-larger {
    font-size: 2rem;
}

/* $ CLAMP Einheit */

.content {
    margin: 5rem auto;
    width:500px;
    background-color: yellow;
}

span {
    color: rgb(162, 12, 162);
    font-weight: 900;
}

.text {
    color: rgb(49, 184, 121);
    /* Diese Methode erhält von uns 3 Parameter und zwar (min, standart, max) als Werte */
    font-size: clamp(2rem, 5vw, 5rem);
}